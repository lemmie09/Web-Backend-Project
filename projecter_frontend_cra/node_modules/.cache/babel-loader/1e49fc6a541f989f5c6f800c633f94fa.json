{"ast":null,"code":"var _jsxFileName = \"/Users/csuftitan/Downloads/Projecter/projecter_frontend_cra/src/pages/home/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Grid, TextField, Button } from \"@mui/material\";\nimport LoginForgotPassword from \"../../components/LoginForgotPassword\";\nimport loginAction from \"../../redux/actions/LoginAction\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport styles from \"../../assets/styles/page_styles/Login_Page.module.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    document.title = \"Login\";\n  }, []);\n  const loginSchema = Yup.object().shape({\n    email: Yup.string().email(\"Not a valid email\").required(\"Email is required\").matches(/^[A-Za-z0-9._%+-]+@[a-z._-]{1,12}\\.com$/, \"Email pattern is not correct\"),\n    password: Yup.string().required(\"Password is required\") // min(8, \"Min 8 characters\").matches(/[a-zA-Z]/, \"Password can only contain Latin letters\"),\n\n  });\n\n  const handleFormSubmit = values => {\n    try {\n      const credentials = {\n        email: values.email,\n        password: values.password\n      };\n      dispatch(loginAction(credentials));\n      setTimeout(() => {\n        const token = sessionStorage.getItem(\"token\");\n        const user = JSON.parse(sessionStorage.getItem(\"user\"));\n        const role = user === null || user === void 0 ? void 0 : user.role;\n\n        if (token) {\n          navigate(`/${role}/dashboard`);\n          setTimeout(() => {\n            toast.success(\"Logged in successfully\");\n          }, 500);\n        }\n      }, 600);\n    } catch (err) {\n      console.log(\"Not able to login in\", err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    className: styles.mainContainer,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xlg: 4,\n      lg: 4,\n      md: 6,\n      sm: 10,\n      xs: 12,\n      className: styles.loginForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.formHeading,\n        children: \"Login to continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        validationSchema: loginSchema,\n        onSubmit: handleFormSubmit,\n        children: _ref => {\n          let {\n            errors,\n            touched,\n            handleChange,\n            handleSubmit\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.inputDiv,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"email\",\n                name: \"email\",\n                label: \"Email\",\n                type: \"text\",\n                className: styles.input,\n                onChange: handleChange(\"email\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), errors.email && touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.formErrorDiv,\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.inputDiv,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"password\",\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                className: styles.input,\n                onChange: handleChange(\"password\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), errors.password && touched.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.formErrorDiv,\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.forgotPasswordDiv,\n              children: /*#__PURE__*/_jsxDEV(LoginForgotPassword, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"contained\",\n              className: styles.loginButton,\n              onClick: handleSubmit,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.register,\n        children: [\"Don't have an account yet?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          className: styles.registerLink,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 3000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"s5YDugppCHA/sTog5Ue+JVWibms=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","Link","useNavigate","useDispatch","Formik","Yup","Grid","TextField","Button","LoginForgotPassword","loginAction","ToastContainer","toast","styles","Login","dispatch","navigate","document","title","loginSchema","object","shape","email","string","required","matches","password","handleFormSubmit","values","credentials","setTimeout","token","sessionStorage","getItem","user","JSON","parse","role","success","err","console","log","mainContainer","loginForm","formHeading","errors","touched","handleChange","handleSubmit","inputDiv","input","formErrorDiv","forgotPasswordDiv","loginButton","register","registerLink"],"sources":["/Users/csuftitan/Downloads/Projecter/projecter_frontend_cra/src/pages/home/Login.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Grid, TextField, Button } from \"@mui/material\";\nimport LoginForgotPassword from \"../../components/LoginForgotPassword\";\nimport loginAction from \"../../redux/actions/LoginAction\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport styles from \"../../assets/styles/page_styles/Login_Page.module.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    document.title = \"Login\";\n  }, []);\n\n  const loginSchema = Yup.object().shape({\n    email: Yup.string()\n      .email(\"Not a valid email\")\n      .required(\"Email is required\")\n      .matches(\n        /^[A-Za-z0-9._%+-]+@[a-z._-]{1,12}\\.com$/,\n        \"Email pattern is not correct\"\n      ),\n    password: Yup.string().required(\"Password is required\"),\n    // min(8, \"Min 8 characters\").matches(/[a-zA-Z]/, \"Password can only contain Latin letters\"),\n  });\n\n  const handleFormSubmit = (values) => {\n    try {\n      const credentials = { email: values.email, password: values.password };\n\n      dispatch(loginAction(credentials));\n\n      setTimeout(() => {\n        const token = sessionStorage.getItem(\"token\");\n        const user = JSON.parse(sessionStorage.getItem(\"user\"));\n        const role = user?.role;\n\n        if (token) {\n          navigate(`/${role}/dashboard`);\n\n          setTimeout(() => {\n            toast.success(\"Logged in successfully\");\n          }, 500);\n        }\n      }, 600);\n    } catch (err) {\n      console.log(\"Not able to login in\", err);\n    }\n  };\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      textAlign=\"center\"\n      className={styles.mainContainer}\n    >\n      <Grid\n        item\n        xlg={4}\n        lg={4}\n        md={6}\n        sm={10}\n        xs={12}\n        className={styles.loginForm}\n      >\n        <h1 className={styles.formHeading}>Login to continue</h1>\n\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          validationSchema={loginSchema}\n          onSubmit={handleFormSubmit}\n        >\n          {({ errors, touched, handleChange, handleSubmit }) => (\n            <form>\n              <div className={styles.inputDiv}>\n                <TextField\n                  id=\"email\"\n                  name=\"email\"\n                  label=\"Email\"\n                  type=\"text\"\n                  className={styles.input}\n                  onChange={handleChange(\"email\")}\n                />\n\n                {errors.email && touched.email ? (\n                  <div className={styles.formErrorDiv}>{errors.email}</div>\n                ) : null}\n              </div>\n\n              <div className={styles.inputDiv}>\n                <TextField\n                  id=\"password\"\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  className={styles.input}\n                  onChange={handleChange(\"password\")}\n                />\n\n                {errors.password && touched.password ? (\n                  <div className={styles.formErrorDiv}>{errors.password}</div>\n                ) : null}\n              </div>\n\n              <div className={styles.forgotPasswordDiv}>\n                <LoginForgotPassword />\n              </div>\n\n              <Button\n                type=\"button\"\n                variant=\"contained\"\n                className={styles.loginButton}\n                onClick={handleSubmit}\n              >\n                Login\n              </Button>\n            </form>\n          )}\n        </Formik>\n\n        <p className={styles.register}>\n          Don't have an account yet?{\" \"}\n          <Link to=\"/signup\" className={styles.registerLink}>\n            Sign Up\n          </Link>\n        </p>\n\n        <ToastContainer position=\"top-right\" autoClose={3000} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
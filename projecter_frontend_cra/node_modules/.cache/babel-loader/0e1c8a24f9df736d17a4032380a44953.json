{"ast":null,"code":"var _jsxFileName = \"/Users/csuftitan/Downloads/Projecter/projecter_frontend_cra/src/components/dashboard/TaskCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Grid, Box, Card, CardActions, CardContent, Button, Typography } from \"@mui/material\";\nimport TaskCardDetails from \"./TaskCardDetails\";\nimport styles from \"../../assets/styles/component_styles/TaskCard.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst taskData = [{\n  title: \"Complete design layout for profile page\",\n  dueDate: \"4th Sep, 2022\",\n  status: \"completed\"\n}, {\n  title: \"Make task and project models in mongoose\",\n  dueDate: \"14th Sep, 2022\",\n  status: \"inprogress\"\n}, {\n  title: \"Integrate change password function\",\n  dueDate: \"26th Sep, 2022\",\n  status: \"inprogress\"\n}, {\n  title: \"Change profile image feature in edit section\",\n  dueDate: \"4th Oct, 2022\",\n  status: \"assigned\"\n}];\n\nconst TaskCard = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [cardStatus, setCardStatus] = useState(\"overall\");\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xlg: 4,\n    lg: 4,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minWidth: 275\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"standard\",\n        className: styles.taskCardMain,\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            className: styles.h2,\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            className: styles.labelsDiv,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.button,\n              onClick: () => {\n                setCardStatus(\"overall\");\n              },\n              style: {\n                color: cardStatus === \"overall\" && \"#1f4583\",\n                textDecoration: cardStatus === \"overall\" && \"underline\",\n                textDecorationThickness: cardStatus === \"overall\" && \"2px\",\n                textUnderlineOffset: cardStatus === \"overall\" && \"8px\"\n              },\n              children: \"Overall\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.button,\n              onClick: () => {\n                setCardStatus(\"todo\");\n              },\n              style: {\n                color: cardStatus === \"todo\" && \"#1f4583\",\n                textDecoration: cardStatus === \"todo\" && \"underline\",\n                textDecorationThickness: cardStatus === \"todo\" && \"2px\",\n                textUnderlineOffset: cardStatus === \"todo\" && \"8px\"\n              },\n              children: \"Todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            className: styles.taskDetails,\n            children: cardStatus === \"todo\" ? taskData.filter(value => value.status === \"inprogress\" || value.status === \"assigned\").slice(0, 2).map((item, index) => /*#__PURE__*/_jsxDEV(TaskCardDetails, {\n              title: item.title,\n              status: item.status,\n              date: item.dueDate\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 23\n            }, this)) : taskData.slice(0, 2).map((item, index) => /*#__PURE__*/_jsxDEV(TaskCardDetails, {\n              title: item.title,\n              status: item.status,\n              date: item.dueDate\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          className: styles.footerDiv,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"standard\",\n            className: styles.link,\n            style: {\n              textTransform: \"none\"\n            },\n            onClick: () => {\n              navigate(\"/user/task\");\n            },\n            children: \"View More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskCard, \"m0S7SPWNtXaDfIwIIGtVC8Xod2s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = TaskCard;\nexport default TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useState","useNavigate","Grid","Box","Card","CardActions","CardContent","Button","Typography","TaskCardDetails","styles","taskData","title","dueDate","status","TaskCard","navigate","cardStatus","setCardStatus","minWidth","taskCardMain","h2","labelsDiv","button","color","textDecoration","textDecorationThickness","textUnderlineOffset","taskDetails","filter","value","slice","map","item","index","footerDiv","link","textTransform"],"sources":["/Users/csuftitan/Downloads/Projecter/projecter_frontend_cra/src/components/dashboard/TaskCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Grid,\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport TaskCardDetails from \"./TaskCardDetails\";\nimport styles from \"../../assets/styles/component_styles/TaskCard.module.scss\";\n\nconst taskData = [\n  {\n    title: \"Complete design layout for profile page\",\n    dueDate: \"4th Sep, 2022\",\n    status: \"completed\",\n  },\n  {\n    title: \"Make task and project models in mongoose\",\n    dueDate: \"14th Sep, 2022\",\n    status: \"inprogress\",\n  },\n  {\n    title: \"Integrate change password function\",\n    dueDate: \"26th Sep, 2022\",\n    status: \"inprogress\",\n  },\n  {\n    title: \"Change profile image feature in edit section\",\n    dueDate: \"4th Oct, 2022\",\n    status: \"assigned\",\n  },\n];\n\nconst TaskCard = () => {\n  const navigate = useNavigate();\n  const [cardStatus, setCardStatus] = useState(\"overall\");\n\n  return (\n    <Grid item xlg={4} lg={4} md={6} sm={12} xs={12}>\n      <Box sx={{ minWidth: 275 }}>\n        <Card variant=\"standard\" className={styles.taskCardMain}>\n          <CardContent>\n            <Typography gutterBottom className={styles.h2}>\n              Tasks\n            </Typography>\n\n            <Typography component=\"div\" className={styles.labelsDiv}>\n              <button\n                className={styles.button}\n                onClick={() => {\n                  setCardStatus(\"overall\");\n                }}\n                style={{\n                  color: cardStatus === \"overall\" && \"#1f4583\",\n                  textDecoration: cardStatus === \"overall\" && \"underline\",\n                  textDecorationThickness: cardStatus === \"overall\" && \"2px\",\n                  textUnderlineOffset: cardStatus === \"overall\" && \"8px\",\n                }}\n              >\n                Overall\n              </button>\n\n              <button\n                className={styles.button}\n                onClick={() => {\n                  setCardStatus(\"todo\");\n                }}\n                style={{\n                  color: cardStatus === \"todo\" && \"#1f4583\",\n                  textDecoration: cardStatus === \"todo\" && \"underline\",\n                  textDecorationThickness: cardStatus === \"todo\" && \"2px\",\n                  textUnderlineOffset: cardStatus === \"todo\" && \"8px\",\n                }}\n              >\n                Todo\n              </button>\n            </Typography>\n\n            <Typography component=\"div\" className={styles.taskDetails}>\n              {cardStatus === \"todo\"\n                ? taskData\n                    .filter(\n                      (value) =>\n                        value.status === \"inprogress\" ||\n                        value.status === \"assigned\"\n                    )\n                    .slice(0, 2)\n                    .map((item, index) => (\n                      <TaskCardDetails\n                        key={index}\n                        title={item.title}\n                        status={item.status}\n                        date={item.dueDate}\n                      />\n                    ))\n                : taskData\n                    .slice(0, 2)\n                    .map((item, index) => (\n                      <TaskCardDetails\n                        key={index}\n                        title={item.title}\n                        status={item.status}\n                        date={item.dueDate}\n                      />\n                    ))}\n            </Typography>\n          </CardContent>\n\n          <CardActions className={styles.footerDiv} justify=\"center\">\n            <Button\n              variant=\"standard\"\n              className={styles.link}\n              style={{ textTransform: \"none\" }}\n              onClick={() => {\n                navigate(\"/user/task\");\n              }}\n            >\n              View More\n            </Button>\n          </CardActions>\n        </Card>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default TaskCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}